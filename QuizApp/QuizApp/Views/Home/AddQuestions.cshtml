@model QuizApp.Models.question

@{
    ViewBag.Title = "AddQuestions";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<h2>AddQuestions</h2>




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <h1 style="color:green">@ViewBag.ms</h1>

<div class="form-horizontal">
    <div class="form-group">
            @Html.LabelFor(model => model.questionCourseId, "questionCourseId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("questionCourseId", ViewBag.list as SelectList,"--Select--" , htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.questionCourseId, "", new { @class = "text-danger" })
            </div>
        </div>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.questionText, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.questionText, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.questionText, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.optionA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.optionA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.optionA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.optionB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.optionB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.optionB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.optionC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.optionC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.optionC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.optionD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.optionD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.optionD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.correctAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.correctAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.correctAnswer, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
